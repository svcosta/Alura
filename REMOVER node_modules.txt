https://fjorgemota.com/gitignore-ou-como-ignorar-arquivos-no-git/

crie um arquivo com o nome de ".gitignore" no seu diretorio

1) Acessar o endereço http://gitignore.io;

2) Colocar no único campo de texto disponível nesse site o nome de todos os projetos que você usa para o desenvolvimento do projeto. Usa Bower? Bota lá! Usa Sublime Text? Só escreve! Usa PHP? Tranquilo, escreve lá! E assim vai..

3) Clicar no botão "Generate" e salvar o arquivo na pasta do repositório do seu projeto com o nome .gitignore;

Pronto! Agora,  com o arquivo adicionado na pasta do repositório do seu projeto, está tudo certo, né? Bem, não exatamente. Dependendo da situação do seu repositório, alguns procedimentos podem ser necessários. Veja:

Se o seu repositório não possuir arquivos cobertos pelo .gitignore já comittados, basta adicionar o .gitignore usando git add .gitignore e git commit -m "Adds .gitignore file" (a mensagem você que escolhe, só estou fornecendo uma sugestão :P);
Se o seu repositório já possuir arquivos cobertos pelo .gitignore já comittados, será necessário executar o comando git rm -r --cached substituindo <arquivos cobertos> pelos arquivos que devem ser removidos do repositório e, depois de fazer essa operação, só então executar git add .gitignore e git commit -m "Adds .gitignore file";
Importante notar que, no segundo caso, se você rodar um tradicional git add . (ou similar) depois do git rm -r --cached e os arquivos que foram cobertos pelo .gitignore serão re-adicionados, ou seja, após o git rm -r --cached , execute apenas o git add .gitignore e então commite!

Com isso, você já conseguir trabalhar mais tranquilo com o Git, sabendo que os arquivos que não devem ir pro repositório simplesmente não vão ser considerados pelo Git e portanto facilitando o seu trabalho.

Bom, por hoje é isso. Se você gostou do post, compartilhe com seus amigos e não deixe de acompanhar o blog. Ah, e se tiver sugestões maneiras de post, mande para mim!
